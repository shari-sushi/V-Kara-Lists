1. Next.js導入
    cd 
    npx create-next-app
    cd ↑で作ったフォルダ(package-lock.jsonがある階層)
    npm install react-hook-form
    npm install react-youtube
    npm install next-auth

    npm install js-cookie
    (npm uninstall next-auth )


2. githubでprodubt作成
   
3. go導入
    cd 
        //メインのディレクトリ(ルートディレクトリ)
    go install github.com/99designs/gqlgen@latest
        //go の最新バージョンをインストール
    go mod init  "github.com/sharin-sushi/0018GoogleSearch.git"
　　    githubのproductのページ
        //go.modを構築　※やり直す場合はgo.modを消してから
    // go get -u github.com/gocolly/colly/v2
    // go get -u github.com/gin-gonic/gin     ←済み 　※最新 -u 
    

    go mod tidy

    go env
　      //環境変数表示　GOROOT, GOPATHの確認

4. git init
    cd rootディレクトリ
    git init
    git add .
    git commit -m "first commit"
    git branch -M main
    git remote add origin "https://github.com/sharin-sushi/0016go_next_relation.git"
    　//HTTPにすること。間違えたら　git remote remove origin　でやり直し
    git push -u origin main

5. **,goへimport
go get "github.com/sharin-sushi/0010/test/internal/article"
記述
     import(
        "getしたurl"
    )


6. 何かしら変更したら
    git checkout ~~(~~を使用) -bで新規作成しつつ使用git 
    git add .  ←そのディレクトリ以下全部の . 
    git commit -m "コメント" ※issue駆動開発の例；コメント内に #{4}　※番号はissue番号
    git push origin ~~　※issue駆動開発の例；issue/4-crud
    完成してればmargeする。(pull request)

　　コメント修正
    push前　git commit --amend してenter→テキスト編集、保存して閉じる
    push後　↑やってから　git push --force-with-lease origin main

    commit取り消し
    push前　git reset [打ち消したいコミットID]
    push後  git reset --soft    //commitのみ取り消し
            git reset --mixed   //commitとaddの取り消し
            git reset --hard    //全部を取り消
    commit取り消しの取り消し
    git reflog　(略)

    init取り消し
    rm -rf .git

    〇メモ
    git branch　--contains 現在のブランチ確認

7. issue駆動開発
　issues作成　→　#番号メモ(下は#11のとき)
　 
　git switch -c issue/11-hoge
    //新規ブランチを立てる

8.他ブランチＡから取得→(何か変更して)→元ブランチＢへ反映させる
(ブランチＢでの変更を捨てる場合)
・現在ブランチの確認 git branch --contains 
  "HEAD detached ~" となったらブランチ名が無い状態

・コード変更後（ブランチＡになっている状態）
    git add .
    git commit -m "～～"
    git checkout -c  (ブランチＢ)
    git merge (ブランチＡ)

